package privblock.gerald.ryan;

import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;

import privblock.gerald.ryan.Block;

/**
 * 
 * @author Gerald Ryan Blockchain class of blockchain app.
 *
 *
 *
 */

public class Blockchain {
	ArrayList<Block> chain = new ArrayList<Block>();

	Blockchain() {
		this.chain.add(Block.genesis_block());
	}

	/**
	 * Validate the incoming chain. Enforce the following rules: - the chain must
	 * start with the genesis block - blocks must be formatted correctly
	 * 
	 * @param blockchain
	 * @return
	 * @throws NoSuchAlgorithmException 
	 */
	public static boolean is_valid_chain(Blockchain blockchain) throws NoSuchAlgorithmException {
		if (blockchain.chain.get(0) != Block.genesis_block()) {
			System.out.println("The genesis block must be valid");
			return false;
			// throw exception: the genesis block must be valid
		}
		for (int i = 1; i < blockchain.chain.size(); i++) {
			Block current_block = blockchain.chain.get(i);
			Block last_block = blockchain.chain.get(i - 1);
			if (!Block.is_valid_block(last_block, current_block)) {
				System.out.println("At least one of the blocks in the chain is not valid");
				return false;
				// throw exception at least one of the blocks in the chain is not valid
			}
		}
		return true;
	}
	
	@Override
	public String toString() {
		return "Blockchain: " + this.chain;
	}

}
